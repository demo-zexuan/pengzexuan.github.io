name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install
      - name: Build with VitePress
        run: pnpm run docs:build
      - name: Create CNAME
        run: |
          echo 'blog.pengzexuan.com' > docs/.vitepress/dist/CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  algolia:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create crawlerConfig.json
        run: |
          cat > ./crawlerConfig.json <<'JSON'
          {
          	"index_name": "blog",
          	"start_urls": ["http://http://blog.pengzexuan.com/"],
          	"rateLimit": 8,
          	"maxDepth": 10,
          	"selectors": {
          		"lvl0": {
          			"selector": "",
          			"defaultValue": "Documentation"
          		},
          		"lvl1": ".content h1",
          		"lvl2": ".content h2",
          		"lvl3": ".content h3",
          		"lvl4": ".content h4",
          		"lvl5": ".content h5",
          		"lvl6": ".content h6",
          		"content": ".content p, .content li",
          		"lang": {
          			"selector": "/html/@lang",
          			"type": "xpath",
          			"global": true
          		}
          	},
          	"selectors_exclude": ["aside", ".page-footer", ".next-and-prev-link", ".table-of-contents"],
          	"custom_settings": {
          		"attributesForFaceting": ["lang", "tags"]
          	},
          	"js_render": true
          }
          JSON
      - name: Get the content of algolia.json as config
        id: algolia_config
        run: echo "config=$(cat ./crawlerConfig.json | jq -r tostring)" >> $GITHUB_OUTPUT
      - name: Push indices to Algolia
        uses: signcl/docsearch-scraper-action@master
        env:
          APPLICATION_ID: ${{ secrets.ALGOLIA_APP_ID }}
          API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          CONFIG: ${{ steps.algolia_config.outputs.config }}